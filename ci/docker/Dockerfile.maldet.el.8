# Copyright 2018-2022 Intel Corporation
# All rights reserved.
#
# 'recipe' for Docker to build an environment scan DAOS for malware.
#

# Pull base image
ARG BASE_DISTRO=rockylinux/rockylinux:8
FROM $BASE_DISTRO
LABEL maintainer="daos@daos.groups.io"

# Intermittent cache-bust.  Used to reduce load on the actual CACHEBUST later.
ARG CB0

# Use local repo server if present
ARG REPO_FILE_URL
RUN set -e;                                                      \
    if [ -n "$REPO_FILE_URL" ]; then                             \
        cd /etc/yum.repos.d/ &&                                  \
        curl -k -f -o daos_ci-el8-artifactory.repo.tmp           \
             "$REPO_FILE_URL"daos_ci-el8-artifactory.repo &&     \
        for file in *.repo; do                                   \
            true > $file;                                        \
        done;                                                    \
        mv daos_ci-el8-artifactory.repo{.tmp,};                  \
    fi;                                                          \
    dnf --assumeyes --disablerepo \*epel\* install dnf-plugins-core;     \
    dnf config-manager --save --setopt=assumeyes=True;           \
    dnf config-manager --save --setopt=install_weak_deps=False;  \
    if [ ! -f /etc/fedora-release ]; then                        \
        dnf --disablerepo \*epel\* install epel-release;         \
        dnf install epel-release;                                \
        if [ -n "$REPO_FILE_URL" ]; then                         \
            PT_REPO=daos_ci-rocky8-powertools-artifactory;       \
            dnf config-manager --disable epel-\*;                \
        else                                                     \
            PT_REPO=powertools;                                  \
        fi;                                                      \
        dnf config-manager --enable $PT_REPO;                    \
    fi;                                                          \
    dnf clean all

ARG JENKINS_URL
ARG REPOS
RUN for repo in $REPOS; do                                                \
        branch="master";                                                  \
        build_number="lastSuccessfulBuild";                               \
        if [[ $repo = *@* ]]; then                                        \
            branch="${repo#*@}";                                          \
            repo="${repo%@*}";                                            \
            if [[ $branch = *:* ]]; then                                  \
                build_number="${branch#*:}";                              \
                branch="${branch%:*}";                                    \
            fi;                                                           \
        fi;                                                               \
        echo -e "[$repo:$branch:$build_number]\n\
name=$repo:$branch:$build_number\n\
baseurl=${JENKINS_URL}job/daos-stack/job/$repo/job/$branch/$build_number/artifact/artifacts/el8/\n\
enabled=1\n\
gpgcheck=False\n" >> /etc/yum.repos.d/$repo:$branch:$build_number.repo;   \
        cat /etc/yum.repos.d/$repo:$branch:$build_number.repo; \
    done

# Install OS updates and package.  Include basic tools and daos dependencies
COPY ./ci/rpm/install-base-el8.sh /tmp/install.sh
RUN chmod +x /tmp/install.sh && dnf upgrade &&           \
    if [ -n "$REPO_FILE_URL" ]; then                     \
        dnf config-manager --disable epel-\* ;          \
    fi &&                                                \
    /tmp/install.sh && dnf clean all &&                  \
    rm -f /tmp/install.sh

ARG UID=1000

# Add DAOS users
RUN useradd --no-log-init --uid $UID --user-group --create-home --shell /bin/bash \
            --home /home/daos daos_server
RUN echo "daos_server ALL=(root) NOPASSWD: ALL" >> /etc/sudoers.d/daos_sudo_setup; \
    chmod 0440 /etc/sudoers.d/daos_sudo_setup;                                     \
    visudo -c;                                                                     \
    sudo -l -U daos_server

# force an upgrade to get any newly built RPMs, but only if CACHEBUST is set.
ARG CACHEBUST
RUN [ -z "$CACHEBUST" ] || {                                                           \
        dnf upgrade --exclude=spdk,spdk-devel,dpdk-devel,dpdk,mercury-devel,mercury && \
        if [ -n "$REPO_FILE_URL" ]; then                                               \
            dnf config-manager --disable epel-\*;                                      \
        fi &&                                                                          \
        dnf clean all;                                                                 \
    }

ARG BUILD_URL
COPY ci/rpm/install_maldet.sh /tmp/install_maldet.sh
COPY ci/rpm/distro_info.sh /tmp/distro_info.sh
COPY ci/provisioning/post_provision_common_functions.sh \
     /tmp/post_provision_common_functions.sh
RUN /tmp/install_maldet.sh
