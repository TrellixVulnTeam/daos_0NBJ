hosts:
  test_servers:
    - server-A
    - server-B
    - server-C
  test_clients:
    - client-A

timeout: 420
daos_server:
  pattern_timeout: 60

server_config:
  name: daos_server
  engines_per_host: 2
  servers:
    0:
      pinned_numa_node: 0
      nr_xs_helpers: 1
      fabric_iface: ib0
      fabric_iface_port: 31317
      log_file: daos_server0.log
      bdev_class: nvme
      bdev_list: ["0000:00:00.0"]
      scm_class: dcpm
      scm_list: ["/dev/pmem0"]
      scm_mount: /mnt/daos0
      targets: 16
    1:
      pinned_numa_node: 1
      nr_xs_helpers: 1
      fabric_iface: ib1
      fabric_iface_port: 31417
      log_file: daos_server1.log
      bdev_class: nvme
      bdev_list: ["0000:00:00.1"]
      scm_class: dcpm
      scm_list: ["/dev/pmem1"]
      scm_mount: /mnt/daos1
      targets: 16

pool_size_ratio_80:
  size: 80%
  control_method: dmg
pool_size_value:
  size: 500G
  control_method: dmg

container_wo_rf:
  type: POSIX
  control_method: daos
container_with_rf:
  type: POSIX
  control_method: daos
  properties: rf:1

ior: &ior_base
  client_processes:
    ppn: 4
  iorflags:
    flags: -k -v -w -W
    api: DFS
    # We wait for a few seconds before excluding a target. If the IOR finishes too
    # quickly, the test will not work. We use -D (deadlineForStonewalling) 120, so the
    # process ends in about 120 sec. Adjust the transfer_size - block_size combination
    # based on the system so that it takes longer than the -D value.
    transfer_size: 512K
    # Total size is block_size * ppn.
    block_size: 30G
    sw_deadline: 120
ior_wo_rf:
  <<: *ior_base
  dfs_oclass: SX
ior_with_rp:
  <<: *ior_base
  dfs_oclass: RP_2G1
ior_with_ec:
  <<: *ior_base
  dfs_oclass: EC_2P1G1
